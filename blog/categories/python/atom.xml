<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | ascent.io]]></title>
  <link href="http://www.ascent.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://www.ascent.io/"/>
  <updated>2014-03-26T13:52:50-07:00</updated>
  <id>http://www.ascent.io/</id>
  <author>
    <name><![CDATA[James Vastbinder]]></name>
    <email><![CDATA[james@ascent.io]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Debugging a Homebrew Failed Install]]></title>
    <link href="http://www.ascent.io/blog/2014/03/14/debugging-a-homebrew-failed-install/"/>
    <updated>2014-03-14T13:10:30-07:00</updated>
    <id>http://www.ascent.io/blog/2014/03/14/debugging-a-homebrew-failed-install</id>
    <content type="html"><![CDATA[<p>This morning I wanted to install a Go environment on my Mac Air, only to be
greeted with this ominous error from homebrew:</p>

<p>``` bash
$ brew install bzr
==> Downloading <a href="https://launchpad.net/bzr/2.6/2.6.0/+download/bzr-2.6.0.tar.gz">https://launchpad.net/bzr/2.6/2.6.0/+download/bzr-2.6.0.tar.gz</a>
Already downloaded: /Library/Caches/Homebrew/bazaar-2.6.0.tar.gz
==> make man1/bzr.1
==> make
Cannot build extension &ldquo;bzrlib._annotator_pyx&rdquo;.
Use &ldquo;build_ext &mdash;allow-python-fallback&rdquo; to use slower python implementations instead.</p>

<p>error: command &lsquo;clang&rsquo; failed with exit status 1
make: *** [extensions] Error 1</p>

<p>READ THIS: <a href="https://github.com/Homebrew/homebrew/wiki/troubleshooting">https://github.com/Homebrew/homebrew/wiki/troubleshooting</a>
```</p>

<!-- more -->


<p>Now I had just built out several different Golang development environments earlier
in the week.  Several searches on Google weren&rsquo;t providing any relief or
guidance.</p>

<p>My first step was to update homebrew.</p>

<p><code>bash
$ brew update  &amp;&amp; brew upgrade
</code></p>

<p>No relief there either&hellip;.  At least not yet.  I then turned up the logging and
sent it to a gist.</p>

<h3>Send debugging data to a gist</h3>

<p><code>bash
brew gist-logs --config --doctor bzr
</code></p>

<p>Here is the output I found:</p>

<p>```
building extension modules.
python setup.py build_ext -i
No Cython, trying Pyrex&hellip;</p>

<p>The python package &lsquo;Pyrex&rsquo; is not available. If the .c files are available,
they will be built, but modifying the .pyx files will not rebuild them.</p>

<p>running build_ext
building &lsquo;bzrlib.<em>annotator_pyx&rsquo; extension
creating build
creating build/temp.macosx-10.9-intel-2.7
creating build/temp.macosx-10.9-intel-2.7/bzrlib
clang -fno-strict-aliasing -fno-common -dynamic -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -mno-fused-madd -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -pipe -arch x86_64 -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c bzrlib/</em>annotator_pyx.c -o build/temp.macosx-10.9-intel-2.7/bzrlib/_annotator_pyx.o
clang: error: unknown argument: &lsquo;-mno-fused-madd&rsquo; [-Wunused-command-line-argument-hard-error-in-future]
clang: note: this will be a hard error (cannot be downgraded to a warning) in the future</p>

<p>  Cannot build extension &ldquo;bzrlib._annotator_pyx&rdquo;.
  Use &ldquo;build_ext &mdash;allow-python-fallback&rdquo; to use slower python implementations instead.</p>

<p>error: command &lsquo;clang&rsquo; failed with exit status 1
make: *** [extensions] Error 1</p>

<p>HOMEBREW_VERSION: 0.9.5
HEAD: f1a2a667ebc1c630f03298ac8be5882426e7d454
CPU: quad-core 64-bit sandybridge
OS X: 10.9.2-x86_64
Xcode: 5.1
CLT: 5.1.0.0.1.1393561416
X11: 2.7.5 => /opt/X11
```
This led me to belive I needed to install either Cython or Pyrex.  I decided
upon attempting to install Pyrex first.  I quickly learned at the Bazaar
website they force Mac users to use Python 2.6 with their install scripts.</p>

<p>This meant I had to use sudo to get Pyrex to install&hellip; I prefer to localize
my development environments to a user to reduce any possible future dependency issues.</p>

<p><code>bash
$ sudo /usr/bin/easy_install-2.6 pyrex
</code></p>

<p>One more attempt at installing Bazaar with Homebrew left me with this error
during make:</p>

<p>```
$ brew gist-logs &mdash;config &mdash;doctor bzr</p>

<p>building extension modules.
python setup.py build_ext -i
running build_ext
skipping &lsquo;bzrlib/<em>annotator_pyx.c&rsquo; Cython extension (up-to-date)
building &lsquo;bzrlib.</em>annotator_pyx&rsquo; extension
creating build
creating build/temp.macosx-10.9-intel-2.7
creating build/temp.macosx-10.9-intel-2.7/bzrlib
clang -fno-strict-aliasing -fno-common -dynamic -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -mno-fused-madd -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -pipe -arch x86_64 -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c bzrlib/<em>annotator_pyx.c -o build/temp.macosx-10.9-intel-2.7/bzrlib/</em>annotator_pyx.o
clang: error: unknown argument: &lsquo;-mno-fused-madd&rsquo; [-Wunused-command-line-argument-hard-error-in-future]
clang: note: this will be a hard error (cannot be downgraded to a warning) in the future</p>

<p>  Cannot build extension &ldquo;bzrlib._annotator_pyx&rdquo;.
  Use &ldquo;build_ext &mdash;allow-python-fallback&rdquo; to use slower python implementations instead.</p>

<p>error: command &lsquo;clang&rsquo; failed with exit status 1
make: *** [extensions] Error 1</p>

<p>HOMEBREW_VERSION: 0.9.5
HEAD: f1a2a667ebc1c630f03298ac8be5882426e7d454
CPU: quad-core 64-bit sandybridge
OS X: 10.9.2-x86_64
Xcode: 5.1
CLT: 5.1.0.0.1.1393561416
X11: 2.7.5 => /opt/X11
```</p>

<h3>Resolution</h3>

<p>Now I was really scratching my head, when I finally realized Apple had just
updated Xcode this week.  Earlier in the day, so had the Homebrew team.  They were
already on the case and had <a href="https://github.com/Homebrew/homebrew/issues/27534#issuecomment-37691498">pushed a fix</a>
whilst I was fighting this issue.</p>

<p>Once more I ran
``` bash
$ brew update</p>

<p>$ brew install bzr
```</p>

<p>And I was met with a successful install.  Relief!</p>

<p>I can now <code>go get</code> with impunity.</p>

<p>If you find your way here, I hope this helps you along your path when debugging
a failed Homebrew install.  A special thanks to the <a href="https://github.com/Homebrew">Homebrew team</a>
for working hard to provide a great product and even better service!</p>
]]></content>
  </entry>
  
</feed>
